service: NiPS-backend

provider:
  name: aws
  runtime: nodejs16.x
  httpApi:
    cors: true
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "arn:aws:s3:::nips-backend/*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
  environment:
    SECRET_KEY: ${env.SECRET_KEY}
    AWS_BUCKET_NAME: ${env.AWS_BUCKET_NAME}
    MONGO_URI: ${env.MONGO_URI}
    NODE_ENV: ${env.NODE_ENV}
    
custom:
  serverless-offline:
    httpPort: 4000

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

functions:
  # GRAPHQL
  graphql:
    handler: src/graph-ql/server.graphqlHandler
    events:
      - httpApi:
          path: /graphql
          method: POST
      - httpApi:
          path: /graphql
          method: GET
  # REST
  register:
    handler: src/handlers/authentication.registerHandler
    events:
      - http:
          path: register
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
  authenticate:
    handler: src/handlers/authentication.authHandler
    events:
      - http:
          path: authenticate
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
  