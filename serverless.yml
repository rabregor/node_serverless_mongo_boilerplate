service: serverless-backend

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  environment:
    SECRET_KEY: ${env.SECRET_KEY}

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

functions:
  # Organizations
  createOrganization:
    handler: src/handlers/organization.createOrganizationHandler
    events:
      - http:
          path: organization
          method: post
  # Users
  register:
    handler: src/handlers/authentication.registerHandler
    events:
      - http:
          path: register
          method: post
  authenticate:
    handler: src/handlers/authentication.authHandler
    events:
      - http:
          path: authenticate
          method: post
  getAllUsers:
    handler: src/handlers/user.getAllUsersHandler
    events:
      - http:
          path: users
          method: get
  getUserById:
    handler: src/handlers/user.getUserByIdHandler
    events:
      - http:
          path: users/{id}
          method: get
  # Folders
  getAllFolders:
    handler: src/handlers/folder.getAllFoldersHandler
    events:
      - http:
          path: folders
          method: get
  getFolderById:
    handler: src/handlers/folder.getFolderByIdHandler
    events:
      - http:
          path: folders/{organization}/{id}
          method: get
  createFolder:
    handler: src/handlers/folder.createFolderHandler
    events:
      - http:
          path: folders
          method: post
  updateFolder:
    handler: src/handlers/folder.updateFolderHandler
    events:
      - http:
          path: folders/{organization}/{id}
          method: put
  # Requirements
  getAllRequirements:
    handler: src/handlers/requirement.getAllRequirementsHandler
    events:
      - http:
          path: requirements
          method: get
  getRequirementById:
    handler: src/handlers/requirement.getRequirementByIdHandler
    events:
      - http:
          path: requirements/{organization}/{id}
          method: get
  createRequirement:
    handler: src/handlers/requirement.createRequirementHandler
    events:
      - http:
          path: requirements
          method: post
  updateRequirement:
    handler: src/handlers/requirement.updateRequirementHandler
    events:
      - http:
          path: requirements/{organization}/{id}
          method: put
  # Files
  getAllFiles:
    handler: src/handlers/file.getAllFilesHandler
    events:
      - http:
          path: files
          method: get
  getFileById:
    handler: src/handlers/file.getFileByIdHandler
    events:
      - http:
          path: files/{organization}/{id}
          method: get
  createFile:
    handler: src/handlers/file.createFileHandler
    events:
      - http:
          path: files
          method: post
  updateFile:
    handler: src/handlers/file.updateFileHandler
    events:
      - http:
          path: files/{organization}/{id}
          method: put
